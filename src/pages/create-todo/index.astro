---
import Input from "../../components/ui/forms/Input.astro";
import Select from "../../components/ui/forms/Select.tsx";
import TextArea from "../../components/ui/forms/TextArea.astro";
import Notification from "../../components/ui/Notification";
import { NOTIFICATIONS_TYPES } from "../../const";

import FormsLayaout from "../../layouts/FormsLayaout.astro";
import { createToDo } from "../../utils/api";
import { getToDoStates, getToDoTypes } from "../../utils/api";
const dataStates = await getToDoStates();
const dataTypes = await getToDoTypes();
const states = dataStates.data;
const types = dataTypes.data;
let notification;
if (dataTypes.notification.text) {
  notification = dataTypes.notification;
} else if (dataStates.notification.text) {
  notification = dataStates.notification;
}
if (Astro.request.method === "POST") {
  try {
    const formData = await Astro.request.formData();
    const body = {
      title: formData.get("title"),
      description: formData.get("description"),
      state: formData.get("state"),
      type: formData.get("type"),
      deadline: formData.get("deadline"),
    };

    const token = Astro.cookies.get("trello_bff_token")?.value;
    notification = await createToDo(body, token);
    if (notification.type === NOTIFICATIONS_TYPES.success)
      return Astro.redirect("/");
  } catch (error) {
    if (error instanceof Error) {
      console.error(error.message);
    }
  }
}
---

<FormsLayaout title="U-Trello">
  <slot name="notification">
    {
      notification?.type && (
        <Notification type={notification.type} text={notification.text} />
      )
    }
  </slot>

  <div class="w-full h-full p-4 flex flex-col justify-center items-center">
    <form
      action=""
      method="post"
      class="border border-gray-600 p-5 rounded-lg bg-gray-800 w-[48rem] flex justify-center gap-4 flex-wrap h-full"
    >
      <h1 class="w-full text-center text-3xl font-bold py-10 underline">
        Create to do
      </h1>
      <Input
        type="text"
        name="title"
        label="Título"
        required={true}
        minLength="4"
        maxLength=""
        className=""
        value=""
      />

      <Input
        type="date"
        name="deadline"
        label="Fecha de entrega"
        required={true}
        minLength=""
        maxLength=""
        className=""
        value=""
      />

      <Select
        options={states}
        required={true}
        label="Estado de las tareas"
        multiple={false}
        id={"state"}
        name={"state"}
        value=""
      />
      <Select
        options={types}
        required={true}
        label="Tipo de tarea"
        multiple={false}
        id={"type"}
        name={"type"}
        value=""
      />
      <TextArea
        name="description"
        label="Descripción"
        required={true}
        minLength="6"
        maxLength="200"
        className=""
        value=""
      />

      <button
        class="h-16 border border-green-300 text-green-300 p-4 text-xl font-bold w-full mt-14 mb-5 rounded-xl bg-gray-900 hover:scale-95 transition-all"
        >Create</button
      >
    </form>
  </div>
</FormsLayaout>
